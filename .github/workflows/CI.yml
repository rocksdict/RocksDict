name: CI musl

on:
  release:
    types: [published]

jobs:
  musllinux_1_2_x86_64:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        target: [x86_64]
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - uses: actions/setup-python@v5
        with:
          python-version: 3.9
          architecture: x64
      - name: Build Wheels
        uses: messense/maturin-action@v1
        with:
          rust-toolchain: 1.82.0
          rustup-components: rustfmt
          target: ${{ matrix.target }}
          manylinux: musllinux_1_2
          args: --release --out dist --interpreter '3.7 3.8 3.9 3.10 3.11 3.12 3.13 pypy3.9 pypy3.10'
          container: congyuwang/musllinux_1_2_x86_64:llvm-19.1.3
          before-script-linux: |
            apk update
            apk add ncurses-static
            apk add zlib-static
        env:
          LIBCLANG_PATH: /usr/local/lib
          CC: /usr/local/bin/clang
          CXX: /usr/local/bin/clang++
          AR: /usr/local/bin/llvm-ar
          CFLAGS: "-flto=thin -O3 -stdlib=libc++"
          CXXFLAGS: "-flto=thin -O3 -stdlib=libc++"
          RUSTFLAGS: "-Clinker-plugin-lto -Clinker=/usr/local/bin/clang -Clink-arg=-fuse-ld=/usr/local/bin/ld.lld"
          # https://github.com/rust-lang/rust-bindgen/issues/2360#issuecomment-2367084230
          LLVM_CONFIG_PATH: /root/llvm_config.sh
          LIBCLANG_STATIC_PATH: /usr/local/lib
      - name: Install built wheel and test
        run: |
          pip install rocksdict --no-index --find-links dist --force-reinstall || true
          pip install speedict --no-index --find-links dist --force-reinstall || true
          python -m unittest discover -v test
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-musllinux_1_2-${{ matrix.target }}
          path: dist

  musllinux_1_2_arm64:
    runs-on: linux-arm64
    strategy:
      fail-fast: false
      matrix:
        target: [aarch64]
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - uses: actions/setup-python@v5
        with:
          python-version: 3.9
          architecture: arm64
      - name: Build Wheels
        uses: messense/maturin-action@v1
        with:
          rust-toolchain: 1.82.0
          rustup-components: rustfmt
          target: ${{ matrix.target }}
          manylinux: musllinux_1_2
          args: --release --out dist --interpreter '3.7 3.8 3.9 3.10 3.11 3.12 3.13 pypy3.9 pypy3.10'
          container: congyuwang/musllinux_1_2_aarch64:llvm-19.1.3
          before-script-linux: |
            apk update
            apk add ncurses-static
            apk add zlib-static
        env:
          LIBCLANG_PATH: /usr/local/lib
          CC: /usr/local/bin/clang
          CXX: /usr/local/bin/clang++
          AR: /usr/local/bin/llvm-ar
          CFLAGS: "-flto=thin -O3 -stdlib=libc++"
          CXXFLAGS: "-flto=thin -O3 -stdlib=libc++"
          RUSTFLAGS: "-Clinker-plugin-lto -Clinker=/usr/local/bin/clang -Clink-arg=-fuse-ld=/usr/local/bin/ld.lld"
          # https://github.com/rust-lang/rust-bindgen/issues/2360#issuecomment-2367084230
          LLVM_CONFIG_PATH: /root/llvm_config.sh
          LIBCLANG_STATIC_PATH: /usr/local/lib
      - name: Install built wheel and test
        run: |
          pip install rocksdict --no-index --find-links dist --force-reinstall || true
          pip install speedict --no-index --find-links dist --force-reinstall || true
          python -m unittest discover -v test
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-musllinux_1_2-${{ matrix.target }}
          path: dist

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: [musllinux_1_2_x86_64, musllinux_1_2_arm64]
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: dist
          pattern: wheels-*
          merge-multiple: true
      - uses: actions/setup-python@v5
        with:
          python-version: 3.9
      - name: Publish to PyPi
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          pip install --upgrade twine
          twine upload --skip-existing dist/*
