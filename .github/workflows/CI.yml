name: CI

on:
  release:
    types: [published]

jobs:
  macos-py37:
    runs-on: macos-13
    strategy:
      fail-fast: false
      matrix:
        py_version: [3.7]
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Install llvm-20
        run: |
          brew update
          brew install llvm@20
          brew install lld
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.py_version }}
          architecture: x64
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: 1.87.0
          default: true
      - name: Build wheels
        run: |
          rustup target add aarch64-apple-darwin
          pip install maturin
          eval "$(brew shellenv)"
          export MACOSX_DEPLOYMENT_TARGET=10.14
          export LIBCLANG_PATH=${HOMEBREW_PREFIX}/opt/llvm@20/lib
          export CC=${HOMEBREW_PREFIX}/opt/llvm@20/bin/clang
          export CXX=${HOMEBREW_PREFIX}/opt/llvm@20/bin/clang++
          export AR=${HOMEBREW_PREFIX}/opt/llvm@20/bin/llvm-ar
          export CFLAGS="-flto=thin -O3 -isysroot/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk"
          export CXXFLAGS="-flto=thin -O3 -isysroot/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk"
          export LLD=${HOMEBREW_PREFIX}/opt/lld/bin/ld64.lld
          export RUSTFLAGS="-Clinker-plugin-lto -Clinker=$PWD/macos-linker.sh -Clink-arg=-fuse-ld=${LLD}"
          maturin build --release --target aarch64-apple-darwin --out dist -i ${{ matrix.py_version }}
          maturin build --release --target x86_64-apple-darwin --out dist -i ${{ matrix.py_version }}
      - name: Install built wheel
        run: |
          pip install rocksdict --no-index --find-links dist --force-reinstall || true
          pip install speedict --no-index --find-links dist --force-reinstall || true
      - name: Python UnitTest
        run: |
          python -m unittest discover -v test
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-macos-${{ matrix.py_version }}
          path: dist

  macos:
    runs-on: macos-latest
    strategy:
      fail-fast: false
      matrix:
        py_version:
          [3.8, 3.9, "3.10", "3.11", "3.12", "3.13", "pypy3.9", "pypy3.10"]
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Install llvm-20
        run: |
          brew update
          brew install llvm@20
          brew install lld
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.py_version }}
          architecture: arm64
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: 1.87.0
          default: true
      - name: Build wheels
        run: |
          rustup target add x86_64-apple-darwin
          pip install maturin
          eval "$(brew shellenv)"
          export MACOSX_DEPLOYMENT_TARGET=10.14
          export LIBCLANG_PATH=${HOMEBREW_PREFIX}/opt/llvm@20/lib
          export CC=${HOMEBREW_PREFIX}/opt/llvm@20/bin/clang
          export CXX=${HOMEBREW_PREFIX}/opt/llvm@20/bin/clang++
          export AR=${HOMEBREW_PREFIX}/opt/llvm@20/bin/llvm-ar
          export CFLAGS="-flto=thin -O3 -isysroot/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk"
          export CXXFLAGS="-flto=thin -O3 -isysroot/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk"
          export LLD=${HOMEBREW_PREFIX}/opt/lld/bin/ld64.lld
          export RUSTFLAGS="-Clinker-plugin-lto -Clinker=$PWD/macos-linker.sh -Clink-arg=-fuse-ld=${LLD}"
          maturin build --release --target aarch64-apple-darwin --out dist -i ${{ matrix.py_version }}
          maturin build --release --target x86_64-apple-darwin --out dist -i ${{ matrix.py_version }}
      - name: Install built wheel
        run: |
          pip install rocksdict --no-index --find-links dist --force-reinstall || true
          pip install speedict --no-index --find-links dist --force-reinstall || true
      - name: Python UnitTest
        run: |
          python -m unittest discover -v test
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-macos-${{ matrix.py_version }}
          path: dist

  windows:
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        target: [x64]
        py_version:
          [3.7, 3.8, 3.9, "3.10", "3.11", "3.12", "3.13", "pypy3.9", "pypy3.10"]
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.py_version }}
          architecture: ${{ matrix.target }}
      - name: Install LLVM and Clang
        uses: KyleMayes/install-llvm-action@v2.0.7
        with:
          version: 20.1.4
          directory: ${{ runner.temp }}/llvm-20.1.4
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: 1.87.0
          default: true
      - name: Build wheels
        uses: messense/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --release --out dist --no-default-features --features bindgen-runtime
        env:
          LIBCLANG_PATH: ${{ runner.temp }}/llvm-20.1.4/lib
          CC: ${{ runner.temp }}/llvm-20.1.4/bin/clang-cl
          CXX: ${{ runner.temp }}/llvm-20.1.4/bin/clang-cl
          AR: ${{ runner.temp }}/llvm-20.1.4/bin/llvm-lib
          CFLAGS: "/clang:-flto=thin /clang:-O3 /clang:-fuse-ld=lld-link"
          CXXFLAGS: "/clang:-flto=thin /clang:-O3 /clang:-fuse-ld=lld-link"
          RUSTFLAGS: "-Clinker-plugin-lto -Clinker=lld-link"
      - name: Install built wheel and test
        run: |
          pip install rocksdict --no-index --find-links dist --force-reinstall || true
          pip install speedict --no-index --find-links dist --force-reinstall || true
          python -m unittest discover -v test
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-win-${{ matrix.py_version }}
          path: dist

  manylinux_2_28_x86_64:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        target: [x86_64]
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - uses: actions/setup-python@v5
        with:
          python-version: 3.9
          architecture: x64
      - name: Build Wheels
        uses: messense/maturin-action@v1
        with:
          rust-toolchain: 1.87.0
          rustup-components: rustfmt
          target: ${{ matrix.target }}
          manylinux: 2_28
          args: --release --out dist --interpreter '3.7 3.8 3.9 3.10 3.11 3.12 3.13 pypy3.9 pypy3.10'
          container: congyuwang/manylinux_2_28_x86_64:llvm-20.1.5
        env:
          LIBCLANG_PATH: /usr/local/lib
          CC: /usr/local/bin/clang
          CXX: /usr/local/bin/clang++
          AR: /usr/local/bin/llvm-ar
          CFLAGS: "-flto=thin -O3"
          CXXFLAGS: "-flto=thin -O3 -L${DEVTOOLSET_ROOTPATH}/usr/lib/gcc/x86_64-redhat-linux/14"
          RUSTFLAGS: "-Clinker-plugin-lto -Clinker=/usr/local/bin/clang -Clink-arg=-fuse-ld=/usr/local/bin/ld.lld"

      - name: Install built wheel and test
        run: |
          pip install rocksdict --no-index --find-links dist --force-reinstall || true
          pip install speedict --no-index --find-links dist --force-reinstall || true
          python -m unittest discover -v test
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-manylinux_2_28-${{ matrix.target }}
          path: dist

  manylinux2014_x86_64:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        target: [x86_64]
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - uses: actions/setup-python@v5
        with:
          python-version: 3.9
          architecture: x64
      - name: Build Wheels
        uses: messense/maturin-action@v1
        with:
          rust-toolchain: 1.87.0
          rustup-components: rustfmt
          target: ${{ matrix.target }}
          manylinux: 2014
          args: --release --out dist --interpreter '3.7 3.8 3.9 3.10 3.11 3.12 3.13 pypy3.9 pypy3.10'
          container: congyuwang/manylinux2014_x86_64:llvm-20.1.5
        env:
          LIBCLANG_PATH: /usr/local/lib
          CC: /usr/local/bin/clang
          CXX: /usr/local/bin/clang++
          AR: /usr/local/bin/llvm-ar
          CFLAGS: "-flto=thin -O3"
          CXXFLAGS: "-flto=thin -O3"
          RUSTFLAGS: "-Clinker-plugin-lto -Clinker=/usr/local/bin/clang -Clink-arg=-fuse-ld=/usr/local/bin/ld.lld"
      - name: Install built wheel and test
        run: |
          pip install rocksdict --no-index --find-links dist --force-reinstall || true
          pip install speedict --no-index --find-links dist --force-reinstall || true
          python -m unittest discover -v test
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-manylinux2014-${{ matrix.target }}
          path: dist

  manylinux_2_28_arm64:
    runs-on: linux-arm64
    strategy:
      fail-fast: false
      matrix:
        target: [aarch64]
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - uses: actions/setup-python@v5
        with:
          python-version: 3.9
          architecture: arm64
      - name: Build Wheels
        uses: messense/maturin-action@v1
        with:
          rust-toolchain: 1.87.0
          rustup-components: rustfmt
          target: ${{ matrix.target }}
          manylinux: 2_28
          args: --release --out dist --interpreter '3.7 3.8 3.9 3.10 3.11 3.12 3.13 pypy3.9 pypy3.10'
          container: congyuwang/manylinux_2_28_aarch64:llvm-20.1.5
        env:
          LIBCLANG_PATH: /usr/local/lib
          CC: /usr/local/bin/clang
          CXX: /usr/local/bin/clang++
          AR: /usr/local/bin/llvm-ar
          CFLAGS: "-flto=thin -O3"
          CXXFLAGS: "-flto=thin -O3"
          RUSTFLAGS: "-Clinker-plugin-lto -Clinker=/usr/local/bin/clang -Clink-arg=-fuse-ld=/usr/local/bin/ld.lld"
      - name: Install built wheel and test
        run: |
          pip install rocksdict --no-index --find-links dist --force-reinstall || true
          pip install speedict --no-index --find-links dist --force-reinstall || true
          python -m unittest discover -v test
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-manylinux_2_28-${{ matrix.target }}
          path: dist

  manylinux2014_arm64:
    runs-on: linux-arm64
    strategy:
      fail-fast: false
      matrix:
        target: [aarch64]
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - uses: actions/setup-python@v5
        with:
          python-version: 3.9
          architecture: arm64
      - name: Build Wheels
        uses: messense/maturin-action@v1
        with:
          rust-toolchain: 1.87.0
          rustup-components: rustfmt
          target: ${{ matrix.target }}
          manylinux: 2014
          args: --release --out dist --interpreter '3.7 3.8 3.9 3.10 3.11 3.12 3.13 pypy3.9 pypy3.10'
          container: congyuwang/manylinux2014_aarch64:llvm-20.1.5
        env:
          LIBCLANG_PATH: /usr/local/lib
          CC: /usr/local/bin/clang
          CXX: /usr/local/bin/clang++
          AR: /usr/local/bin/llvm-ar
          CFLAGS: "-flto=thin -O3"
          CXXFLAGS: "-flto=thin -O3"
          RUSTFLAGS: "-Clinker-plugin-lto -Clinker=/usr/local/bin/clang -Clink-arg=-fuse-ld=/usr/local/bin/ld.lld"
      - name: Install built wheel and test
        run: |
          pip install rocksdict --no-index --find-links dist --force-reinstall || true
          pip install speedict --no-index --find-links dist --force-reinstall || true
          python -m unittest discover -v test
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-manylinux2014-${{ matrix.target }}
          path: dist

  musllinux_1_2_x86_64:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        target: [x86_64]
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Build Wheels
        uses: messense/maturin-action@v1
        with:
          rust-toolchain: 1.87.0
          rustup-components: rustfmt
          target: ${{ matrix.target }}
          manylinux: musllinux_1_2
          args: --release --no-default-features --features bindgen-static,lto --out dist --interpreter '3.7 3.8 3.9 3.10 3.11 3.12 3.13 pypy3.9 pypy3.10'
          container: congyuwang/musllinux_1_2_x86_64:llvm-20.1.5
          before-script-linux: |
            apk update
            apk add ncurses-static
            apk add zlib-static
            ln -s /usr/lib/gcc/x86_64-alpine-linux-musl/14.2.0/crtbeginS.o /usr/lib/crtbeginS.o
            ln -s /usr/lib/gcc/x86_64-alpine-linux-musl/14.2.0/crtendS.o /usr/lib/crtendS.o
            ln -s /usr/lib/gcc/x86_64-alpine-linux-musl/14.2.0/libgcc.a /usr/lib/libgcc.a
        env:
          LIBCLANG_PATH: /usr/local/lib
          CC: /usr/local/bin/clang
          CXX: /usr/local/bin/clang++
          AR: /usr/local/bin/llvm-ar
          CFLAGS: "-flto=thin -O3 -isystem/usr/include"
          CXXFLAGS: "-flto=thin -O3 -isystem/usr/include/c++/14.2.0/ -isystem/usr/include -isystem/usr/include/c++/14.2.0/x86_64-alpine-linux-musl"
          RUSTFLAGS: "-Clinker-plugin-lto -Clinker=/usr/local/bin/clang -Clink-arg=-fuse-ld=/usr/local/bin/ld.lld"
          LLVM_CONFIG_PATH: /root/llvm_config.sh
          LIBCLANG_STATIC_PATH: /usr/local/lib
      - name: Run Tests
        run: |
          docker run --rm -v ${{ github.workspace }}/dist:/dist:ro -v ${{ github.workspace }}/test:/test:ro congyuwang/musllinux_1_2_x86_64:llvm-20.1.5 bash -c "
            python3.12 -m pip install rocksdict --no-index --find-links /dist --force-reinstall || true
            python3.12 -m pip install speedict --no-index --find-links /dist --force-reinstall || true
            python3.12 -m unittest discover -v /test"
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: wheels-musllinux_1_2-x86_64
          path: dist

  musllinux_1_2_arm64:
    runs-on: linux-arm64
    strategy:
      fail-fast: false
      matrix:
        target: [aarch64]
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Build Wheels
        uses: messense/maturin-action@v1
        with:
          rust-toolchain: 1.87.0
          rustup-components: rustfmt
          target: ${{ matrix.target }}
          manylinux: musllinux_1_2
          args: --release --no-default-features --features bindgen-static,lto --out dist --interpreter '3.7 3.8 3.9 3.10 3.11 3.12 3.13 pypy3.9 pypy3.10'
          container: congyuwang/musllinux_1_2_aarch64:llvm-20.1.5
          before-script-linux: |
            apk update
            apk add ncurses-static
            apk add zlib-static
            ln -s /usr/lib/gcc/aarch64-alpine-linux-musl/14.2.0/crtbeginS.o /usr/lib/crtbeginS.o
            ln -s /usr/lib/gcc/aarch64-alpine-linux-musl/14.2.0/crtendS.o /usr/lib/crtendS.o
            ln -s /usr/lib/gcc/aarch64-alpine-linux-musl/14.2.0/libgcc.a /usr/lib/libgcc.a
        env:
          LIBCLANG_PATH: /usr/local/lib
          CC: /usr/local/bin/clang
          CXX: /usr/local/bin/clang++
          AR: /usr/local/bin/llvm-ar
          CFLAGS: "-flto=thin -O3 -isystem/usr/include"
          CXXFLAGS: "-flto=thin -O3 -isystem/usr/include/c++/14.2.0/ -isystem/usr/include -isystem/usr/include/c++/14.2.0/aarch64-alpine-linux-musl"
          RUSTFLAGS: "-Clinker-plugin-lto -Clinker=/usr/local/bin/clang -Clink-arg=-fuse-ld=/usr/local/bin/ld.lld"
          LLVM_CONFIG_PATH: /root/llvm_config.sh
          LIBCLANG_STATIC_PATH: /usr/local/lib
      - name: Run Tests
        run: |
          docker run --rm -v ${{ github.workspace }}/dist:/dist:ro -v ${{ github.workspace }}/test:/test:ro congyuwang/musllinux_1_2_aarch64:llvm-20.1.5 bash -c "
            python3.12 -m pip install rocksdict --no-index --find-links /dist --force-reinstall || true
            python3.12 -m pip install speedict --no-index --find-links /dist --force-reinstall || true
            python3.12 -m unittest discover -v /test"
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: wheels-musllinux_1_2-arm64
          path: dist

  release:
    name: Release
    runs-on: ubuntu-latest
    needs:
      [
        windows,
        macos,
        manylinux_2_28_x86_64,
        manylinux2014_x86_64,
        manylinux_2_28_arm64,
        manylinux2014_arm64,
        musllinux_1_2_x86_64,
        musllinux_1_2_arm64,
      ]
    permissions:
      contents: write
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: dist
          pattern: wheels-*
          merge-multiple: true
      - uses: actions/setup-python@v5
        with:
          python-version: 3.9
      - name: Publish to PyPi
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          pip install --upgrade twine
          twine upload --skip-existing dist/*
      - name: Github Release
        uses: softprops/action-gh-release@v2
        if: github.ref_type == 'tag'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: wheels-*
