name: PR check

on:
  pull_request:
    branches: [main, speedict]

jobs:
  macos:
    runs-on: macos-latest
    strategy:
      fail-fast: false
      matrix:
        py_version: [3.7, 3.8, 3.9, "3.10", "3.11", "3.12"]
    steps:
      - uses: actions/checkout@v2
      - name: Install llvm-17
        run: brew install llvm@17
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.py_version }}
          architecture: x64
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          default: true
      - name: Build wheels
        run: |
          rustup target add aarch64-apple-darwin
          pip install maturin
          eval "$(brew shellenv)"
          export MACOSX_DEPLOYMENT_TARGET=10.14
          export LIBCLANG_PATH=${HOMEBREW_PREFIX}/opt/llvm/lib
          export CC=${HOMEBREW_PREFIX}/opt/llvm/bin/clang
          export CXX=${HOMEBREW_PREFIX}/opt/llvm/bin/clang++
          export AR=${HOMEBREW_PREFIX}/opt/llvm/bin/llvm-ar
          export CFLAGS="-flto=thin -O3"
          export CXXFLAGS="-flto=thin -O3"
          export LLD=${HOMEBREW_PREFIX}/opt/llvm/bin/ld64.lld
          export RUSTFLAGS="-Clinker-plugin-lto -Clinker=$PWD/macos-linker.sh -Clink-arg=-fuse-ld=${LLD}"
          maturin build --release --target aarch64-apple-darwin --out dist -i python${{ matrix.py_version }}
          maturin build --release --target x86_64-apple-darwin --out dist -i python${{ matrix.py_version }}
      - name: Install built wheel
        run: |
          pip install rocksdict --no-index --find-links dist --force-reinstall || true
          pip install speedict --no-index --find-links dist --force-reinstall || true
      - name: Python UnitTest
        run: |
          python -m unittest discover -v test
      - name: Upload wheels
        uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: dist

  windows:
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        target: [x64, x86]
        py_version: [3.7, 3.8, 3.9, "3.10", "3.11", "3.12"]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.py_version }}
          architecture: ${{ matrix.target }}
      - name: Install LLVM and Clang
        uses: KyleMayes/install-llvm-action@v1
        with:
          version: 17.0
          directory: ${{ runner.temp }}/llvm-17.0
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          default: true
      - name: Build wheels
        uses: messense/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --release --out dist
        env:
          LIBCLANG_PATH: ${{ runner.temp }}/llvm-17.0/lib
          CC: ${{ runner.temp }}/llvm-17.0/bin/clang-cl
          CXX: ${{ runner.temp }}/llvm-17.0/bin/clang-cl
          AR: ${{ runner.temp }}/llvm-17.0/bin/llvm-lib
          CFLAGS: "/clang:-flto=thin /clang:-O3 /clang:-fuse-ld=lld-link"
          CXXFLAGS: "/clang:-flto=thin /clang:-O3 /clang:-fuse-ld=lld-link"
          RUSTFLAGS: "-Clinker-plugin-lto -Clinker=lld-link"
      - name: Install built wheel and test
        run: |
          pip install rocksdict --no-index --find-links dist --force-reinstall || true
          pip install speedict --no-index --find-links dist --force-reinstall || true
          python -m unittest discover -v test
      - name: Upload wheels
        uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: dist

  manylinux_2_28:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        target: [x86_64]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v4
        with:
          python-version: 3.9
          architecture: x64
      - name: Build Wheels
        uses: messense/maturin-action@v1
        with:
          rust-toolchain: stable
          rustup-components: rustfmt
          target: ${{ matrix.target }}
          manylinux: 2_28
          args: --release --out dist --interpreter '3.7 3.8 3.9 3.10 3.11 3.12'
          container: messense/manylinux_2_28-cross:${{ matrix.target }}
      - name: Install built wheel and test
        if: matrix.target == 'x86_64'
        run: |
          pip install rocksdict --no-index --find-links dist --force-reinstall || true
          pip install speedict --no-index --find-links dist --force-reinstall || true
          python -m unittest discover -v test
      - name: Upload wheels
        uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: dist

  manylinux2014:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        target: [x86_64]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v4
        with:
          python-version: 3.9
          architecture: x64
      - name: Build Wheels
        uses: messense/maturin-action@v1
        with:
          rust-toolchain: stable
          rustup-components: rustfmt
          target: ${{ matrix.target }}
          manylinux: 2014
          args: --release --out dist --interpreter '3.7 3.8 3.9 3.10 3.11 3.12'
          container: congyuwang/manylinux2014:${{ matrix.target }}
      - name: Install built wheel and test
        if: matrix.target == 'x86_64'
        run: |
          pip install rocksdict --no-index --find-links dist --force-reinstall || true
          pip install speedict --no-index --find-links dist --force-reinstall || true
          python -m unittest discover -v test
      - name: Upload wheels
        uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: dist

  linux-cross:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        target: [aarch64]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v4
        with:
          python-version: 3.9
      - name: Build Wheels
        uses: messense/maturin-action@v1
        with:
          rust-toolchain: stable
          rustup-components: rustfmt
          target: ${{ matrix.target }}
          manylinux: 2_28
          args: --release --out dist --interpreter '3.7 3.8 3.9 3.10 3.11 3.12'
          container: congyuwang/manylinux_2_28-cross:${{ matrix.target }}
      - uses: uraimo/run-on-arch-action@v2
        if: matrix.target != 'ppc64'
        name: Install built wheel and test
        with:
          arch: ${{ matrix.target }}
          distro: ubuntu22.04
          githubToken: ${{ github.token }}
          install: |
            apt-get update
            apt-get install -y --no-install-recommends python3 python3-pip
            pip3 install -U pip
          run: |
            pip3 install rocksdict --no-index --find-links dist --force-reinstall || true
            pip3 install speedict --no-index --find-links dist --force-reinstall || true
            python3 -m unittest discover -v test
      - name: Upload wheels
        uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: dist
